openapi: 3.0.4
info:
  title: Car API
  version: 1.0.0
  description: API for managing cars.

paths:
  /cars:
    get:
      summary: List all cars.
      description: Retrieve a list of all cars.
      responses:
        '200':
          description: A list of cars.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    post:
      summary: Create a new car.
      description: Add a new car.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Response"
      responses:
        '201':
          description: Car created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        '400':
          description: Bad request due malformed JSON, or validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /cars/{id}:
    get:
      summary: Get a car by ID.
      description: Retrieve a specific car using its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Car details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        '400':
          description: Bad request due to invalid ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: Car not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    put:
      summary: Update a car by ID.
      description: Modify details of an existing car.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Response"
      responses:
        '200':
          description: Car updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        '400':
          description: Bad request due to invalid ID, malformed JSON, or validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: Car not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

components:
  schemas:
    Car:
      type: object
      required:
        - make
        - model
        - color
        - category
        - year
      properties:
        id:
          type: string
          description: Unique identifier for the car.
        make:
          type: string
          description: Manufacturer of the car.
        model:
          type: string
          description: Model name of the car.
        package:
          type: string
          description: Package level.
        color:
          type: string
          description: Exterior color of the car.
        category:
          type: string
          description: Category of the car (e.g., SUV, Sedan, Truck).
        year:
          type: integer
          description: Manufacturing year of the car.
        mileage:
          type: number
          format: double
          description: Distance the car has traveled in miles.
        price:
          type: number
          format: double
          description: Price of the car in cents.
    Cars:
      type: array
      items:
        $ref: "#/components/schemas/Car"
    Response:
      type: object
      properties:
        data:
          description: The response data.
          oneOf:
            - $ref: "#/components/schemas/Car"
            - $ref: "#/components/schemas/Cars"
        error:
          type: string
          description: Error message or empty if no error.